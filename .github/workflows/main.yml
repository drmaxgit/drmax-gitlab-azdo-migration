name: CI
on:
  push:
    branches:
    - "*"
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.17.0'
    - name: Install dependencies
      run: make dep
    - name: Run vet, fmt, lint
      run: make test
  release:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ github.ref_type == 'tag' }}
    steps:
    - name: Set env
      run: |
       echo "CI_COMMIT_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
       export CI_COMMIT_TAG=${GITHUB_REF#refs/*/}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build binaries
      run: make build
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ env.CI_COMMIT_TAG }}
        body: ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false
    - name: Upload Darwin binary
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./bin/${{ github.event.repository.name }}-darwin-amd64-${{ env.CI_COMMIT_TAG }}
        asset_name: ${{ github.event.repository.name }}-darwin-amd64-${{ env.CI_COMMIT_TAG }}
        asset_content_type: application/x-mach-binary
    - name: Upload Linux binary
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./bin/${{ github.event.repository.name }}-linux-amd64-${{ env.CI_COMMIT_TAG }}
        asset_name: ${{ github.event.repository.name }}-linux-amd64-${{ env.CI_COMMIT_TAG }}
        asset_content_type: application/x-executable
    - name: Upload Windows binary
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./bin/${{ github.event.repository.name }}-windows-amd64-${{ env.CI_COMMIT_TAG }}.exe
        asset_name: ${{ github.event.repository.name }}-windows-amd64-${{ env.CI_COMMIT_TAG }}.exe
        asset_content_type: application/x-dosexec

